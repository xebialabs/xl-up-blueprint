apiVersion: xl/v2
kind: Blueprint
metadata:
  name: XL UP
  description: |
    This blueprint deploys XL Deploy, XL Release, and XL-k8s-foundation into an existing Kubernetes installation (local single-node Kubernetes, on-premises multi-node Kubernetes cluster, or Amazon EKS cluster).
  author: XebiaLabs
  version: 1.0
spec:
  parameters:
    - name: K8sSetup
      type: Select
      prompt: "Select the Kubernetes setup where the XebiaLabs Devops Platform will be installed:"
      options:
        - Local K8s from Docker Desktop for Mac/Windows
        - AWS EKS
        - Google Kubernetes Engine
        - Plain multinode K8s cluster
      saveInXlvals: true

    - name: useKubeconfig
      type: Confirm
      prompt: "Do you want to use Kubernetes' current-context from ~/.kube/config?"
      promptIf: !expr "k8sConfig('IsAvailable') && K8sSetup != 'Google Kubernetes Engine'"
      default: !expr "k8sConfig('IsAvailable')"
      saveInXlvals: true

    - name: apiServerURL
      type: Input
      prompt: "Enter the ApiServerURL of your Kubernetes installation:"
      default: !expr "k8sConfig('ClusterServer')"
      promptIf: !expr "!useKubeconfig && K8sSetup != 'Local K8s from Docker Desktop for Mac/Windows'"
      saveInXlvals: true

    - name: OsType
      type: Input
      prompt: "The type of operating system where the xl command is running:"
      value: !expr "os('_operatingsystem')"
      saveInXlvals: true

    - name: localApiServerURL
      type: Input
      prompt: "Enter the ApiServerURL of your Kubernetes installation:"
      value: !expr "K8sSetup == 'Local K8s from Docker Desktop for Mac/Windows' ? os('_defaultapiserverurl') : 'none'"
      saveInXlvals: true

    - name: K8sClientCertFile
      type: File
      # type: SecretFile should be put after bug https://xebialabs.atlassian.net/browse/LOVE-1162 is fixed
      prompt: "Enter the full path to your Kubernetes client certificate:"
      promptIf: !expr "!useKubeconfig && K8sSetup != 'AWS EKS' "
      saveInXlvals: true

    - name: K8sClientKeyFile
      type: File
      # type: SecretFile should be put after bug https://xebialabs.atlassian.net/browse/LOVE-1162 is fixed
      prompt: "Enter the full path to your Kubernetes client certificate key:"
      saveInXlvals: true
      promptIf: !expr "!useKubeconfig && K8sSetup != 'AWS EKS' "

      # Client certificates used for Upgrade only and downloaded from the Configmap
    - name: CertFile
      type: Input
      prompt: "Enter your K8s Client Certificate:"
      #promptIf: !expr "!useKubeconfig && K8sSetup != 'AWS EKS' "
      value: !expr "!useKubeconfig && K8sSetup != 'AWS EKS' ? os('getcertfilelocation') : false"

    - name: KeyFile
      type: Input
      prompt: "Enter your K8s Client Certificate Key:"
      #promptIf: !expr "!useKubeconfig && K8sSetup != 'AWS EKS' "
      value: !expr "!useKubeconfig && K8sSetup != 'AWS EKS' ? os('getkeyfilelocation') : false"
      # END

    - name: K8sClientCert
      type: Editor
      prompt: "Using Kubernetes client certificate from your context"
      saveInXlvals: true
      #promptIf: !expr "useKubeconfig && K8sSetup != 'AWS EKS' "
      #default: !expr "k8sConfig('UserClientCertificateData')"
      value: !expr "useKubeconfig && K8sSetup != 'AWS EKS' ? k8sConfig('UserClientCertificateData') : 'none'"

    - name: K8sClientKey
      type: Editor
      prompt: "Using Kubernetes client certificate Key from your context"
      saveInXlvals: true
      #promptIf: !expr "useKubeconfig && K8sSetup != 'AWS EKS' "
      #default: !expr "k8sConfig('UserClientKeyData')"
      value: !expr "useKubeconfig && K8sSetup != 'AWS EKS' ? k8sConfig('UserClientKeyData') : 'none'"

    - name: K8sToken
      type: Input
      prompt: "Provide authentication token for the existing service account:"
      promptIf: !expr "!useKubeconfig && K8sSetup == 'Google Kubernetes Engine' "
      default: ""
      saveInXlvals: true

    - name: eksClusterName
      type: Input
      prompt: "What is the Amazon EKS cluster name?"
      promptIf: !expr "!useKubeconfig && K8sSetup == 'AWS EKS' "
      default: !expr "k8sConfig('ContextCluster')"
      saveInXlvals: true

    - name: isAwsCfgAvailable
      type: Confirm
      value: !expr "awsCredentials('IsAvailable')"
      #promptIf: !expr "K8sSetup == 'AWS EKS' "

    - name: useAWSconfig
      type: Confirm
      prompt: "Do you want to use the AWS credentials from your ~/.aws/credentials file?"
      promptIf: !expr "isAwsCfgAvailable && K8sSetup == 'AWS EKS'"
      saveInXlvals: true

    - name: AWSAccessKey
      type: SecretInput
      prompt: "What is the AWS access key ID?"
      promptIf: !expr "!useAWSconfig && K8sSetup == 'AWS EKS' "
      saveInXlvals: true
      # useRawValue: true
      default: !expr "awsCredentials('AccessKeyID')"

    - name: AWSAccessSecret
      type: SecretInput
      prompt: "What is the AWS secret access key?"
      promptIf: !expr "!useAWSconfig && K8sSetup == 'AWS EKS' "
      saveInXlvals: true
      # useRawValue: true
      default: !expr "awsCredentials('SecretAccessKey')"
  files:
    - path: cm_answer_file_auto.yaml.tmpl
    - path: cert.crt.tmpl
      writeIf: !expr "K8sClientCertFile != ''"
    - path: cert.key.tmpl
      writeIf: !expr "K8sClientKeyFile != ''"