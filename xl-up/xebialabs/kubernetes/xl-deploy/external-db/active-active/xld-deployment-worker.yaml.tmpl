{{$XLD_ADMIN_PASS := "{{XLD_ADMIN_PASS}}"}}
{{$XLD_DB_NAME := "{{XLD_DB_NAME}}"}}
{{$XLD_DB_USER := "{{XLD_DB_USER}}"}}
{{$XLD_DB_PASS := "{{XLD_DB_PASS}}"}}
{{$XLD_LIC := "{{XLD_LIC}}"}}
{{$XLD_KEYSTORE_PASS := "{{XLD_KEYSTORE_PASS}}"}}
{{$XLD_KEYSTORE := "{{XLD_KEYSTORE}}"}}
{{$XLD_OFFICIAL_VERSION := "{{XLD_OFFICIAL_VERSION}}"}}
---
apiVersion: v1
kind: Service
metadata:
  name: xl-deploy-worker
  namespace: {{ .Namespace }}
  labels:
    app: xl-deploy
    component: worker
    organization: xebialabs
spec:
  selector:
    app: xl-deploy
    component: worker
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: akka
      port: 8180
      protocol: TCP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: xl-deploy-worker
  namespace: {{ .Namespace }}
  labels:
    organization: xebialabs
spec:
  serviceName: "xl-deploy-worker"
  replicas: {{ .XldWorkerCount }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: xl-deploy
      component: worker
  template:
    metadata:
      labels:
        app: xl-deploy
        component: worker
        organization: xebialabs
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9100'
    spec:
      {{- if eq .K8sSetup "Openshift" }}
      serviceAccountName: {{ .OpenshiftServiceAccount }}
      {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - {key: app, operator: In, values: [xl-deploy]}
                  - {key: component, operator: In, values: [worker]}
              topologyKey: "kubernetes.io/hostname"
      initContainers:
        - name: fix-the-volume-permission
          {{if .UseCustomRegistryForAllImages }}
          image: {{.RegistryURL}}/tiny-tools
          {{ else }}
          image: xebialabs/tiny-tools
          {{ end }}
          command:
            - sh
            - -c
            - chown -R 10001 /opt/xebialabs/xl-deploy-server/work
          securityContext:
            privileged: true
          volumeMounts:
            - name: work-dir
              mountPath: /opt/xebialabs/xl-deploy-server/work
        {{if not .ExternalDatabase}}
        - name: wait-for-postgresql
          {{if .UseCustomRegistryForAllImages }}
          image: {{.RegistryURL}}/tiny-tools
          {{ else }}
          image: xebialabs/tiny-tools
          {{ end }}
          command:
            - sh
            - -c
            - >
              until nc -z -w 2 $POSTGRES_SVC $POSTGRES_PORT && echo database ok; do
              sleep 2;
              done;
          env:
            - name: POSTGRES_SVC
              value: postgresql
            - name: POSTGRES_PORT
              value: "5432"
          {{end}}
      containers:
        - name: xl-deploy
          {{if .UseCustomRegistry }}
          image: {{.RegistryURL}}/{{.XldVersion}}
          {{ else }}
          image: xebialabs/xl-deploy:{{$XLD_OFFICIAL_VERSION}}
          {{ end }}
          imagePullPolicy: Always
          env:
            - name: ADMIN_PASSWORD
              value: {{$XLD_ADMIN_PASS}}
            - name: XL_CLUSTER_MODE
              value: default
            - name: XL_DB_URL
              {{if .ExternalDatabase}}
              value: {{.XldDbUrl}}
              {{else}}
              value: jdbc:postgresql://postgresql:5432/{{$XLD_DB_NAME}}
              {{end}}
            - name: XL_DB_USERNAME
              value: {{$XLD_DB_USER}}
            - name: XL_DB_PASSWORD
              value: "{{$XLD_DB_PASS}}"
            - name: XL_METRICS_ENABLED
              value: "false"
            - name: XL_LICENSE
              value: {{$XLD_LIC}}
            - name: REPOSITORY_KEYSTORE_PASSPHRASE
              value: {{$XLD_KEYSTORE_PASS}}
            - name: REPOSITORY_KEYSTORE
              value: {{$XLD_KEYSTORE}}
            - name: FORCE_UPGRADE
              value: "false"
            - name: XLD_IN_PROCESS
              value: "false"
            - name: HOSTNAME_SUFFIX
              value: ".xl-deploy"
            - name: XLD_TASK_QUEUE_DRIVER_CLASS_NAME
              value: {{ .RabbitMQDriver }}
            - name: XLD_TASK_QUEUE_URL
              value: "{{- if .RabbitMQExternal }}{{ .RabbitMQUrl }}{{- else }}amqp://rabbitmq.{{ .Namespace }}.svc.cluster.local:5672{{- end }}"
            - name: XLD_TASK_QUEUE_USERNAME
              value: {{ .RabbitMQUsername }}
            - name: XLD_TASK_QUEUE_PASSWORD
              value: {{ .RabbitMQPassword }}
          args:
            - "worker"
            - "-master"
            - "xl-deploy-master.{{ .Namespace }}.svc.cluster.local:8180"
            - "-api"
            - "http://xl-deploy-lb.{{ .Namespace }}.svc.cluster.local:4516/"
          resources:
            requests:
              memory: "{{ .XldWorkerRAMRequest }}"
              cpu: "{{ .XldWorkerCPURequest }}"
            limits:
              memory: "{{ .XldWorkerRAMLimit }}"
              cpu: "{{ .XldWorkerCPULimit }}"
          ports:
            - name: akka
              containerPort: 8180
            - name: jmx-exporter
              containerPort: 9100
          readinessProbe:
            tcpSocket:
              port: 8180
            initialDelaySeconds: 20
            periodSeconds: 15
            failureThreshold: 6
          volumeMounts:
            - name: work-dir
              mountPath: /opt/xebialabs/xl-deploy-server/work
      {{- if .IsHybridCluster}}
      nodeSelector:
        {{- if eq .K8sSetup "AwsEKS"}}
        beta.kubernetes.io/os: linux
        {{- else if eq .K8sSetup "GoogleGKE"}}
        kubernetes.io/os: linux
        {{- else if eq .K8sSetup "AzureAKS"}}
        kubernetes.io/os: linux
        {{- end}}
      {{- end}}
      {{if .UseCustomRegistry }}
      imagePullSecrets:
      - name: dockercred
      {{ end }}
  volumeClaimTemplates:
    - metadata:
        name: work-dir
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{if .UseExistingStorageClasses }}
        storageClassName: {{.StorageClassName}}
        {{ else if eq .K8sSetup "AwsEKS" }}
        storageClassName: xebialabs-gp2-retain
        {{else if eq .K8sSetup "GoogleGKE" }}
        storageClassName: xebialabs-standard-retain
        {{else if eq .K8sSetup "AzureAKS" }}
        storageClassName: xebialabs-default-retain
        {{else if or (eq .K8sSetup "PlainK8SCluster") (eq .K8sSetup "Openshift")}}
        storageClassName: xebialabs-managed-nfs-storage
        {{end}}
        resources:
          requests:
            storage: {{ .XldWorkPvcSize }}
