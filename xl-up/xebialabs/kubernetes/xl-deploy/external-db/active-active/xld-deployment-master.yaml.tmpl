{{$XLD_ADMIN_PASS := "{{XLD_ADMIN_PASS}}"}}
{{$XLD_DB_NAME := "{{XLD_DB_NAME}}"}}
{{$XLD_DB_USER := "{{XLD_DB_USER}}"}}
{{$XLD_DB_PASS := "{{XLD_DB_PASS}}"}}
{{$XLD_LIC := "{{XLD_LIC}}"}}
{{$XLD_KEYSTORE_PASS := "{{XLD_KEYSTORE_PASS}}"}}
{{$XLD_KEYSTORE := "{{XLD_KEYSTORE}}"}}
{{$XLD_OFFICIAL_VERSION := "{{XLD_OFFICIAL_VERSION}}"}}

{{- if not .ExternalDatabase}}
kind: ConfigMap
apiVersion: v1
metadata:
  name: postgresql-init-sql-xld
  namespace: {{ .Namespace }}
  labels:
    organization: xebialabs
data:
  init-sql.sh: |-
    #!/bin/sh
    set -e

    if psql -v ON_ERROR_STOP=1 -h "$POSTGRES_HOST"  --username "$POSTGRES_USER" -lqt | cut -d \| -f 1 | grep -qw {{$XLD_DB_NAME}}; then
       echo "database {{$XLD_DB_NAME}} exists"
    else
        psql -v ON_ERROR_STOP=1 -h "$POSTGRES_HOST" --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
            CREATE USER "{{$XLD_DB_USER}}" WITH ENCRYPTED PASSWORD '{{$XLD_DB_PASS}}';
            CREATE DATABASE "{{$XLD_DB_NAME}}";
            GRANT ALL PRIVILEGES ON DATABASE "{{$XLD_DB_NAME}}" TO "{{$XLD_DB_USER}}";
    EOSQL
       echo "database {{$XLD_DB_NAME}} created"
    fi
---
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: xl-deploy-lb
  namespace: {{ .Namespace }}
  labels:
    app: xl-deploy
    component: master
    organization: xebialabs
spec:
  selector:
    app: xl-deploy
    component: master
  type: ClusterIP
  ports:
    - name: http
      port: 4516
      targetPort: 4516
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: xl-deploy-master
  namespace: {{ .Namespace }}
  labels:
    app: xl-deploy
    component: master
    organization: xebialabs
spec:
  selector:
    app: xl-deploy
    component: master
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: akka
      port: 8180
      protocol: TCP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: xl-deploy
  namespace: {{ .Namespace }}
  labels:
    app: xl-deploy
    organization: xebialabs
  annotations:
    kubernetes.io/ingress.class: haproxy
    ingress.kubernetes.io/rewrite-target: /
    ingress.kubernetes.io/ssl-redirect: "false"
    ingress.kubernetes.io/affinity: cookie
    ingress.kubernetes.io/session-cookie-name: SESSION_XLD
    ingress.kubernetes.io/session-cookie-strategy: prefix
    ingress.kubernetes.io/config-backend: |
      option httpchk GET /deployit/ha/health HTTP/1.0
spec:
  rules:
    - http:
        paths:
          - path: /xl-deploy/
            backend:
              serviceName: xl-deploy-lb
              servicePort: 4516
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: xl-deploy-master
  namespace: {{ .Namespace }}
  labels:
    organization: xebialabs
spec:
  serviceName: "xl-deploy-master"
  replicas: {{ .XldMasterCount }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: xl-deploy
      component: master
  template:
    metadata:
      labels:
        app: xl-deploy
        component: master
        organization: xebialabs
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9100'
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - {key: app, operator: In, values: [xl-deploy]}
                  - {key: component, operator: In, values: [master]}
              topologyKey: "kubernetes.io/hostname"
      initContainers:
        - name: fix-the-volume-permission
          image: busybox
          command:
            - sh
            - -c
            - chown -R 10001 /opt/xebialabs/xl-deploy-server/export
          securityContext:
            privileged: true
          volumeMounts:
            - name: export-dir
              mountPath: /opt/xebialabs/xl-deploy-server/export
        {{if not .ExternalDatabase}}
        - name: wait-for-postgresql
          image: alpine:3.6
          command:
            - sh
            - -c
            - >
              until nc -z -w 2 $POSTGRES_SVC $POSTGRES_PORT && echo database ok; do
              sleep 2;
              done;
          env:
            - name: POSTGRES_SVC
              value: postgresql
            - name: POSTGRES_PORT
              value: "5432"
        - name: create-db
          image: xebialabs/tiny-tools
          imagePullPolicy: Always
          command:
            - '/bin/sh'
            - '/tmp/init-sql.sh'
          securityContext:
            privileged: true
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_HOST
              value: postgresql
          volumeMounts:
            - name: postgresql-init-sql-xld
              subPath: init-sql.sh
              mountPath: /tmp/init-sql.sh
          {{end}}
      containers:
        - name: xl-deploy
          {{if .UseCustomRegistry }}
          image: {{.RegistryURL}}/{{.XldVersion}}
          {{ else }}
          image: xebialabs/xl-deploy:{{$XLD_OFFICIAL_VERSION}}
          {{ end }}
          imagePullPolicy: Always
          env:
            - name: ADMIN_PASSWORD
              value: {{$XLD_ADMIN_PASS}}
            - name: XL_CLUSTER_MODE
              value: default
            - name: XL_DB_URL
              {{if .ExternalDatabase}}
              value: {{.XldDbUrl}}
              {{else}}
              value: jdbc:postgresql://postgresql:5432/{{$XLD_DB_NAME}}
              {{end}}
            - name: XL_DB_USERNAME
              value: {{$XLD_DB_USER}}
            - name: XL_DB_PASSWORD
              value: "{{$XLD_DB_PASS}}"
            - name: XL_METRICS_ENABLED
              value: "false"
            - name: XL_LICENSE
              value: {{$XLD_LIC}}
            - name: REPOSITORY_KEYSTORE_PASSPHRASE
              value: {{$XLD_KEYSTORE_PASS}}
            - name: REPOSITORY_KEYSTORE
              value: {{$XLD_KEYSTORE}}
            - name: FORCE_UPGRADE
              value: "true"
            - name: XLD_IN_PROCESS
              value: "false"
            - name: HOSTNAME_SUFFIX
              value: ".xl-deploy-master.{{ .Namespace }}.svc.cluster.local"
            - name: XLD_TASK_QUEUE_DRIVER_CLASS_NAME
              value: {{ .RabbitMQDriver }}
            - name: XLD_TASK_QUEUE_URL
              value: "{{- if .RabbitMQExternal }}{{ .RabbitMQUrl }}{{- else }}amqp://rabbitmq.{{ .Namespace }}.svc.cluster.local:5672{{- end }}"
            - name: XLD_TASK_QUEUE_USERNAME
              value: {{ .RabbitMQUsername }}
            - name: XLD_TASK_QUEUE_PASSWORD
              value: {{ .RabbitMQPassword }}
          resources:
            requests:
              memory: "{{ .XldMasterRAMRequest }}"
              cpu: "{{ .XldMasterCPURequest }}"
            limits:
              memory: "{{ .XldMasterRAMLimit }}"
              cpu: "{{ .XldMasterCPULimit }}"
          ports:
            - name: http
              containerPort: 4516
            - name: jmx-exporter
              containerPort: 9100
            - name: akka
              containerPort: 8180
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 20
            periodSeconds: 15
            failureThreshold: 6
          volumeMounts:
            - name: export-dir
              mountPath: /opt/xebialabs/xl-deploy-server/export
      {{- if .IsHybridCluster}}
      nodeSelector:
        {{- if eq .K8sSetup "AwsEKS"}}
        beta.kubernetes.io/os: linux
        {{- else if eq .K8sSetup "GoogleGKE"}}
        kubernetes.io/os: linux
        {{- else if eq .K8sSetup "AzureAKS"}}
        kubernetes.io/os: linux
        {{- end}}
      {{- end}}
      {{if .UseCustomRegistry }}
      imagePullSecrets:
      - name: dockercred
      {{ end }}
      volumes:
        {{- if not .ExternalDatabase}}
        - name: postgresql-init-sql-xld
          configMap:
            name: postgresql-init-sql-xld
            defaultMode: 0777
        {{- end }}
        - name: export-dir
          persistentVolumeClaim:
            claimName: xld-export-claim
