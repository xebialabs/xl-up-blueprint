kind: Service
apiVersion: v1
metadata:
  name: haproxy-ingress
  namespace: {{ .Namespace }}
  labels:
    app.kubernetes.io/name: haproxy-ingress
    app.kubernetes.io/part-of: haproxy-ingress
    organization: xebialabs
  annotations:
    # replace with the correct value of the generated certificate in the AWS console
    #service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "{CERT_ARN}"
    # the backend instances are HTTP
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    # Map port 443
    #service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    # Ensure the ELB idle timeout is less than nginx keep-alive timeout. By default,
    # NGINX keep-alive is set to 75s. If using WebSockets, the value will need to be
    # increased to '3600' to avoid any potential issues.
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "300"
    # Internal load balancer tags 
    {{- if and (eq .K8sSetup "AwsEKS") (eq .UseInternalLoadBalancer true)}}
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    {{- else if and (eq .K8sSetup "GoogleGKE") (eq .UseInternalLoadBalancer true)}}
    cloud.google.com/load-balancer-type: "Internal"
    {{- else if and (eq .K8sSetup "AzureAKS") (eq .UseInternalLoadBalancer true)}}
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    {{- end }}
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: haproxy-ingress
    app.kubernetes.io/part-of: haproxy-ingress
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 443
