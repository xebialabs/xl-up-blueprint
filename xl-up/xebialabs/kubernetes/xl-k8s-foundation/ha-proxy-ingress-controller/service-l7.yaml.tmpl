kind: Service
apiVersion: v1
metadata:
  name: haproxy-ingress
  namespace: {{ .Namespace }}
  labels:
    app.kubernetes.io/name: haproxy-ingress
    app.kubernetes.io/part-of: haproxy-ingress
  annotations:
    {{- if eq .K8sSetup "AwsEKS"}}
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "300"
    {{- end }}
    {{- if eq .K8sSetup "AzureAKS"}}
    service.beta.kubernetes.io/azure-load-balancer-tcp-idle-timeout: "300"
    {{- end }}
    #{{- if eq .K8sSetup "GoogleGKE"}}
    #beta.cloud.google.com/backend-config: '{"ports": {"80":"xl-backendconfig"}}'
    #{{- end }}

    # Internal load balancer tags 
    {{- if and (eq .K8sSetup "AwsEKS") (eq .UseInternalLoadBalancer true)}}
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    {{- else if and (eq .K8sSetup "GoogleGKE") (eq .UseInternalLoadBalancer true)}}
    cloud.google.com/load-balancer-type: "Internal"
    {{- else if and (eq .K8sSetup "AzureAKS") (eq .UseInternalLoadBalancer true)}}
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    {{- end }}
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: haproxy-ingress
    app.kubernetes.io/part-of: haproxy-ingress
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 443
