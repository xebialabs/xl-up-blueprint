{{$XLD_DB_USER := "{{XLD_DB_USER}}"}}
{{$XLD_DB_PASS := "{{XLD_DB_PASS}}"}}
{{$XLD_DB_NAME := "{{XLD_DB_NAME}}"}}
{{$XLR_DB_USER := "{{XLR_DB_USER}}"}}
{{$XLR_DB_PASS := "{{XLR_DB_PASS}}"}}
{{$XLR_DB_NAME := "{{XLR_DB_NAME}}"}}
{{$XLR_REPORT_DB_USER := "{{XLR_REPORT_DB_USER}}"}}
{{$XLR_REPORT_DB_PASS := "{{XLR_REPORT_DB_PASS}}"}}
{{$XLR_REPORT_DB_NAME := "{{XLR_REPORT_DB_NAME}}"}}
{{$POSTGRES_MAX_CONN := "{{POSTGRES_MAX_CONN}}"}}
{{$POSTGRES_SYNC_COMMIT := "{{POSTGRES_SYNC_COMMIT}}"}}
{{$POSTGRES_EFFECT_CACHE_SIZE := "{{POSTGRES_EFFECT_CACHE_SIZE}}"}}
{{$POSTGRES_SHARED_BUFF := "{{POSTGRES_SHARED_BUFF}}"}}
{{$POSTGRES_MAX_WALL_SIZE := "{{POSTGRES_MAX_WALL_SIZE}}"}}
{{$POSTGRESQL_HOSTPATH := "{{POSTGRESQL_HOSTPATH}}"}}


kind: ConfigMap
apiVersion: v1
metadata:
  name: postgresql-init-sql
  namespace: {{ .Namespace }}
data:
  init-sql.sh: |-
    #!/bin/bash
    set -e

    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        {{if .InstallXLD }}
        CREATE USER "{{$XLD_DB_USER}}" WITH ENCRYPTED PASSWORD '{{$XLD_DB_PASS}}';
        CREATE DATABASE "{{$XLD_DB_NAME}}";
        GRANT ALL PRIVILEGES ON DATABASE "{{$XLD_DB_NAME}}" TO "{{$XLD_DB_USER}}";
        {{end}}
        {{if .InstallXLR }}
        CREATE USER "{{$XLR_DB_USER}}" WITH ENCRYPTED PASSWORD '{{$XLR_DB_PASS}}';
        CREATE DATABASE "{{$XLR_DB_NAME}}";
        GRANT ALL PRIVILEGES ON DATABASE "{{$XLR_DB_NAME}}" TO "{{$XLR_DB_USER}}";

        CREATE USER "{{$XLR_REPORT_DB_USER}}" WITH ENCRYPTED PASSWORD '{{$XLR_REPORT_DB_PASS}}';
        CREATE DATABASE "{{$XLR_REPORT_DB_NAME}}";
        GRANT ALL PRIVILEGES ON DATABASE "{{$XLR_REPORT_DB_NAME}}" TO "{{$XLR_REPORT_DB_USER}}";
        {{end}}
    EOSQL
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: {{ .Namespace }}
  labels:
    app: postgresql
spec:
  ports:
    - port: 5432
  selector:
    app: postgresql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: {{ .Namespace }}
  labels:
    app: postgresql
spec:
  serviceName: postgresql
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      initContainers:
        - name: fix-the-volume-permission
          image: busybox
          imagePullPolicy: Always
          command:
            - sh
            - -c
            - chown -R 70:70 /var/lib/postgresql/data
          securityContext:
            privileged: true
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
        - name: "remove-lost-found"
          image: "busybox:1.26.2"
          imagePullPolicy: "IfNotPresent"
          command:
            - 'sh'
            - '-c'
            - 'rm -rf /var/lib/postgresql/lost+found'
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: data
      containers:
        - image: postgres:10.5
          name: postgresql
          command: ["docker-entrypoint.sh"]
          args:
            - "-c"
            - "max_connections={{$POSTGRES_MAX_CONN}}"
            - "-c"
            - "synchronous_commit={{$POSTGRES_SYNC_COMMIT}}"
            - "-c"
            - "effective_cache_size={{$POSTGRES_EFFECT_CACHE_SIZE}}"
            - "-c"
            - "shared_buffers={{$POSTGRES_SHARED_BUFF}}"
            - "-c"
            - "max_wal_size={{$POSTGRES_MAX_WALL_SIZE}}"
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_DB
              value: postgres
          resources:
            requests:
              memory: 1Gi
              cpu: "0.5"
            limits:
              memory: 2Gi
              cpu: "1"
          ports:
            - containerPort: 5432
              name: postgresql
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: postgresql-init-sql
              subPath: init-sql.sh
              mountPath: /docker-entrypoint-initdb.d/init-sql.sh
      volumes:
        - name: postgresql-init-sql
          configMap:
            name: postgresql-init-sql
            defaultMode: 0777
  {{if eq .K8sSetup "LocalK8S" }}
        - name: data
          emptyDir: {}
  {{else}}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{if eq .K8sSetup "AwsEKS" }}
        storageClassName: xebialabs-gp2-retain
        {{else if eq .K8sSetup "GoogleGKE" }}
        storageClassName: xebialabs-standard-retain
        {{else if eq .K8sSetup "PlainK8SCluster" }}
        storageClassName: xebialabs-managed-nfs-storage
        {{end}}
        resources:
          requests:
            storage: {{ .PostgresqlDataPvcSize }}
  {{end}}