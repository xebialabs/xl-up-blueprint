apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: {{ .Namespace }}
  labels:
    app: prometheus
    purpose: metrics-collector
    organization: xebialabs
spec:
  serviceName: "prometheus"
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      purpose: metrics-collector
  template:
    metadata:
      labels:
        app: prometheus
        purpose: metrics-collector
        organization: xebialabs
    spec:
      serviceAccountName: prometheus
      initContainers:
        - name: "init-chown-data"
          {{if .UseCustomRegistryForAllImages }}
          image: {{.RegistryURL}}/tiny-tools
          {{else}}
          image: xebialabs/tiny-tools
          {{end}}
          command: ["chown", "-R", "65534:65534", "/data"]
          volumeMounts:
            - name: data
              mountPath: /data
              subPath: ""
      containers:
      - name: prometheus
        {{if .UseCustomRegistryForAllImages }}
        image: {{.RegistryURL}}/prometheus:v2.7.2
        {{else}}
        image: prom/prometheus:v2.7.2
        {{end}}
        args:
          - --config.file=/etc/prometheus/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          - --storage.tsdb.retention.time={{.MonitoringDataRetention}}d
        ports:
          - containerPort: 9090
        volumeMounts:
          - name: config-volume
            mountPath: /etc/prometheus/prometheus.yml
            subPath: prometheus.yml
          - name: data
            mountPath: /data
            subPath: ""
      {{if .UseCustomRegistryForAllImages }}
      imagePullSecrets:
      - name: dockercred
      {{ end }}
      {{- if .IsHybridCluster}}
      nodeSelector:
        {{- if eq .K8sSetup "AwsEKS"}}
        beta.kubernetes.io/os: linux
        {{- else if eq .K8sSetup "GoogleGKE"}}
        kubernetes.io/os: linux
        {{- else if eq .K8sSetup "AzureAKS"}}
        kubernetes.io/os: linux
        {{- end}}
      {{- end}}
      volumes:
        - name: config-volume
          configMap:
           name: prometheus-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{if .UseExistingStorageClasses }}
        storageClassName: {{.StorageClassName}}
        {{ else if eq .K8sSetup "AwsEKS" }}
        storageClassName: xebialabs-gp2-retain
        {{else if eq .K8sSetup "GoogleGKE"}}
        storageClassName: xebialabs-standard-retain
        {{else if eq .K8sSetup "PlainK8SCluster" }}
        storageClassName: xebialabs-managed-nfs-storage
        {{else if eq .K8sSetup "AzureAKS" }}
        storageClassName: xebialabs-default-retain
        {{end}}
        resources:
          requests:
            storage: {{ .MonitoringPrometheusDataPvcSize }}
---
kind: Service
apiVersion: v1
metadata:
  name: prometheus-ui
  namespace: {{ .Namespace }}
  labels:
    app: prometheus
    organization: xebialabs
spec:
  selector:
    app: prometheus
    purpose: metrics-collector
  ports:
  - name: promui
    protocol: TCP
    port: 9090
    targetPort: 9090
