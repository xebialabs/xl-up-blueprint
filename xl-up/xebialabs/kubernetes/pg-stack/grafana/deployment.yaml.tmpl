apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
    organization: xebialabs
  name: grafana
  namespace: {{ .Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        organization: xebialabs
    spec:
      initContainers:
        - name: fix-the-volume-permission
          {{if .UseCustomRegistryForAllImages }}
          image: {{.RegistryURL}}/tiny-tools
          {{else}}
          image: xebialabs/tiny-tools
          {{end}}
          command:
            - sh
            - -c
            - chown -R 472 /var/lib/grafana
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
      containers:
      - name: grafana
        {{if .UseCustomRegistryForAllImages }}
        image: {{.RegistryURL}}/grafana:5.4.4
        {{else}}
        image: grafana/grafana:5.4.4
        {{end}}
        env:
          # The following env variables set up basic auth twith the default admin user and admin password.
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: grafana
                key: admin-username
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana
                key: admin-password
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "false"
          - name: GF_SERVER_ROOT_URL
            value: "%(protocol)s://%(domain)s/grafana/"
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
        resources:
          limits:
            cpu: 0.8
            memory: 3Gi
          requests:
            cpu: 0.5
            memory: 2Gi
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
          readOnly: false
      {{if .UseCustomRegistryForAllImages }}
      imagePullSecrets:
      - name: dockercred
      {{ end }}
      {{- if .IsHybridCluster}}
      nodeSelector:
        {{- if eq .K8sSetup "AwsEKS"}}
        beta.kubernetes.io/os: linux
        {{- else if eq .K8sSetup "GoogleGKE"}}
        kubernetes.io/os: linux
        {{- else if eq .K8sSetup "AzureAKS"}}
        kubernetes.io/os: linux
        {{- end}}
      {{- end}}
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: {{ .Namespace }}
  labels:
    app: grafana
    component: core
    organization: xebialabs
spec:
  type: ClusterIP
  ports:
    - port: 3000
  selector:
    app: grafana