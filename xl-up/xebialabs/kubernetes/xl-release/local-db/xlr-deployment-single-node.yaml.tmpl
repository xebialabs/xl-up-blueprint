{{$XLR_ADMIN_PASS := "{{XLR_ADMIN_PASS}}"}}
{{$XLR_DB_NAME := "{{XLR_DB_NAME}}"}}
{{$XLR_DB_USER := "{{XLR_DB_USER}}"}}
{{$XLR_DB_PASS := "{{XLR_DB_PASS}}"}}
{{$XLR_LIC := "{{XLR_LIC}}"}}
{{$XLR_REPORT_DB_NAME := "{{XLR_REPORT_DB_NAME}}"}}
{{$XLR_REPORT_DB_USER := "{{XLR_REPORT_DB_USER}}"}}
{{$XLR_REPORT_DB_PASS := "{{XLR_REPORT_DB_PASS}}"}}
{{$XLR_KEYSTORE_PASS := "{{XLR_KEYSTORE_PASS}}"}}
{{$XLR_KEYSTORE := "{{XLR_KEYSTORE}}"}}
{{$XLR_OFFICIAL_VERSION := "{{XLR_OFFICIAL_VERSION}}"}}
apiVersion: v1
kind: Service
metadata:
  name: xl-release
  namespace: {{ .Namespace }}
  labels:
    app: xl-release
spec:
  selector:
    app: xl-release
  type: ClusterIP
  ports:
    - name: http
      port: 5516
      targetPort: 5516
      protocol: TCP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: xl-release
  namespace: {{ .Namespace }}
  labels:
    app: xl-release
  annotations:
    kubernetes.io/ingress.class: haproxy
    ingress.kubernetes.io/rewrite-target: /
    ingress.kubernetes.io/ssl-redirect: "false"
    ingress.kubernetes.io/affinity: cookie
    ingress.kubernetes.io/session-cookie-name: JSESSIONID
    ingress.kubernetes.io/session-cookie-strategy: prefix
spec:
  rules:
    - http:
        paths:
          - path: /xl-release/
            backend:
              serviceName: xl-release
              servicePort: 5516
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: xl-release
  namespace: {{ .Namespace }}
spec:
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: xl-release
  serviceName: xl-release
  template:
    metadata:
      labels:
        app: xl-release
    spec:
      initContainers:
        {{if not .ExternalDatabase}}
        - name: wait-for-db
          image: alpine:3.6
          command:
            - sh
            - -c
            - >
              until nc -z -w 2 $POSTGRES_SVC $POSTGRES_PORT && echo database ok; do
                sleep 2;
              done;
          env:
            - name: POSTGRES_SVC
              value: postgresql
            - name: POSTGRES_PORT
              value: "5432"
        {{end}}
      containers:
        - name: xl-release
          {{if .UseCustomRegistry }}
          image: {{.RegistryURL}}/{{.XlrVersion}}
          {{ else }}
          image: xebialabs/xl-release:{{$XLR_OFFICIAL_VERSION}}
          {{ end }}
          imagePullPolicy: Always
          env:
            - name: ADMIN_PASSWORD
              value: {{$XLR_ADMIN_PASS}}
            - name: XL_CLUSTER_MODE
              value: default
            - name: XL_DB_URL
              {{if .ExternalDatabase}}
              value: {{.XlrDbUrl}}
              {{else}}
              value: jdbc:postgresql://postgresql:5432/{{$XLR_DB_NAME}}
              {{end}}
            - name: XL_DB_USERNAME
              value: {{$XLR_DB_USER}}
            - name: XL_DB_PASSWORD
              value: "{{$XLR_DB_PASS}}"
            - name: XL_METRICS_ENABLED
              value: "false"
            - name: XL_LICENSE
              value: {{$XLR_LIC}}
            - name: SERVER_URL
              value: "http://localhost:5516"
            - name: XL_REPORT_DB_URL
              {{if .ExternalDatabase}}
              value: {{.XlrReportDbUrl}}
              {{else}}
              value: jdbc:postgresql://postgresql:5432/{{$XLR_REPORT_DB_NAME}}
              {{end}}
            - name: XL_REPORT_DB_USERNAME
              value: {{$XLR_REPORT_DB_USER}}
            - name: XL_REPORT_DB_PASSWORD
              value: "{{$XLR_REPORT_DB_PASS}}"
            - name: REPOSITORY_KEYSTORE_PASSPHRASE
              value: {{$XLR_KEYSTORE_PASS}}
            - name: REPOSITORY_KEYSTORE
              value: {{$XLR_KEYSTORE}}
            - name: FORCE_UPGRADE
              value: "true"
          resources:
            requests:
              memory: 2Gi
              cpu: "1"
            limits:
              memory: "3Gi"
              cpu: "1.5"
          ports:
            - name: http
              containerPort: 5516
          readinessProbe:
            httpGet:
              path: /ha/health
              port: http
            initialDelaySeconds: 20
            periodSeconds: 15
            failureThreshold: 6
      {{if .UseCustomRegistry }}
      imagePullSecrets:
      - name: dockercred
      {{ end }}
  {{if (or (eq .K8sSetup "AwsEKS" ) (eq .K8sSetup "PlainK8SCluster"))}}
  volumeClaimTemplates:
    - metadata:
        name: repository
      spec:
        accessModes:
          - ReadWriteOnce
        {{if eq .K8sSetup "AwsEKS" }}
        storageClassName: gp2-retain
        {{end}}
        {{if eq .K8sSetup "PlainK8SCluster"}}
        storageClassName: managed-nfs-storage
        {{end}}
        resources:
          requests:
            storage: 5Gi
  {{end}}