apiVersion: xl-deploy/v1
kind: Applications
spec:
  - directory: Applications/XEBIALABS
    children:
      - directory: XL-DEPLOY
        children:
          {{if (or (eq .K8sSetup "AWS EKS" ) ( eq .K8sSetup "Plain multinode K8s cluster" ))}}
          - directory: EXTERNAL-DB
            children:
              - directory: HOT-STANDBY
                children:

                  - name: XL-Deploy-Hot-Standby
                    type: udm.Application
                    children:
                      - name: !value xlVersion
                        type: udm.DeploymentPackage
                        orchestrator:
                          - sequential-by-dependency
                        deployables:
                          - name: xld-deployment
                            type: k8s.ResourcesFile
                            file: !file ../kubernetes/xl-deploy/external-db/hot-standby/xld-deployment-hot-standby.yaml
                          - name: xld-pvc
                            type: k8s.ResourcesFile
                            file: !file ../kubernetes/xl-deploy/external-db/hot-standby/pvc.yaml
                        applicationDependencies:
                          {{if  eq .K8sSetup "AWS EKS" }}
                          XL-Deploy-AWS-EFS: "1.0.0"
                          {{end}}
                          {{if  eq .K8sSetup "Plain multinode K8s cluster" }}
                            {{if  not .InstallMonitoring}}
                          K8s-Ingress-Controller: "1.0.0"
                            {{else}}
                          Kibana: "1.0.0"
                          Grafana-Dashboard: "1.0.0"
                            {{end}}
                          {{end}}
                        undeployDependencies: "true"
          {{end}}
          {{if  eq .K8sSetup "AWS EKS" }}
                  - name: XL-Deploy-AWS-EFS
                    type: udm.Application
                    lastVersion: 1.0.0
                    children:
                      - name: 1.0.0
                        type: udm.DeploymentPackage
                        orchestrator:
                          - sequential-by-dependency
                        deployables:
                          - name: aws-efs-conf
                            type: k8s.ResourcesFile
                            file: !file ../kubernetes/xl-deploy/external-db/hot-standby/aws-efs/aws-efs-conf.yaml
                          - name: aws-efs-deployment
                            type: k8s.ResourcesFile
                            file: !file ../kubernetes/xl-deploy/external-db/hot-standby/aws-efs/aws-efs-deployment.yaml
                          - name: aws-efs-rbac
                            type: k8s.ResourcesFile
                            file: !file ../kubernetes/xl-deploy/external-db/hot-standby/aws-efs/aws-efs-rbac.yaml
                          - name: aws-efs-storageclass
                            type: k8s.ResourcesFile
                            file: !file ../kubernetes/xl-deploy/external-db/hot-standby/aws-efs/aws-efs-storageclass.yaml
                        applicationDependencies:
                          {{if not .InstallMonitoring}}
                          K8s-Ingress-Controller: "1.0.0"
                          {{else}}
                          Kibana: "1.0.0"
                          Grafana-Dashboard: "1.0.0"
                          {{end}}
                        undeployDependencies: "true"
          {{end}}
          {{if  eq .K8sSetup "Local K8s from Docker for Mac/Windows" }}
          - directory: LOCAL-DB
            children:
              - name: XL-Deploy-Single-Node
                type: udm.Application
                children:
                  - name: !value xlVersion
                    orchestrator:
                      - sequential-by-dependency
                    type: udm.DeploymentPackage
                    deployables:
                      - name: xld-deployment
                        type: k8s.ResourcesFile
                        file: !file ../kubernetes/xl-deploy/local-db/xld-deployment-single-node.yaml
                    applicationDependencies:
                      K8s-Ingress-Controller: "1.0.0"
                      PostgreSQL: "1.0.0"
                    undeployDependencies: "true"
          {{end}}