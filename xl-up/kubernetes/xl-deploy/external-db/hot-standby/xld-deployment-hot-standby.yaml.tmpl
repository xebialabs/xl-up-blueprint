{{$XLD_ADMIN_PASS := "{{XLD_ADMIN_PASS}}"}}
{{$XLD_DB_NAME := "{{XLD_DB_NAME}}"}}
{{$XLD_DB_USER := "{{XLD_DB_USER}}"}}
{{$XLD_DB_PASS := "{{XLD_DB_PASS}}"}}
{{$XLD_LIC := "{{XLD_LIC}}"}}
{{$XLD_KEYSTORE_PASS := "{{XLD_KEYSTORE_PASS}}"}}
{{$XLD_KEYSTORE := "{{XLD_KEYSTORE}}"}}
{{$XL_VERSION := "{{XL_VERSION}}"}}
{{$DOCKER_REPO := "{{DOCKER_REPO}}"}}
apiVersion: v1
kind: Service
metadata:
  name: xl-deploy
  namespace: {{ .Namespace }}
  labels:
    app: xl-deploy
spec:
  selector:
    app: xl-deploy
  type: ClusterIP
  ports:
    - name: http
      port: 4516
      targetPort: 4516
      protocol: TCP
---
# Using nginx ingress controller
#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  name: xl-deploy
#  namespace: {{ .Namespace }}
#  labels:
#    app: xl-deploy
#    app.kubernetes.io/name: ingress-nginx
#    app.kubernetes.io/part-of: ingress-nginx
#  annotations:
#    kubernetes.io/ingress.class: nginx
#    nginx.ingress.kubernetes.io/rewrite-target: /
#spec:
#  rules:
#    - http:
#        paths:
#          - path: /xl-deploy/
#            backend:
#              serviceName: xl-deploy
#              servicePort: 4516
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: xl-deploy
  namespace: {{ .Namespace }}
  labels:
    app: xl-deploy
  annotations:
    kubernetes.io/ingress.class: haproxy
    ingress.kubernetes.io/rewrite-target: /
    ingress.kubernetes.io/ssl-redirect: "false"
    ingress.kubernetes.io/config-backend: |
      option httpchk get /deployit/ha/health HTTP/1.0
spec:
  rules:
    - http:
        paths:
          - path: /xl-deploy/
            backend:
              serviceName: xl-deploy
              servicePort: 4516
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: xl-deploy
  namespace: {{ .Namespace }}
spec:
  serviceName: "xl-deploy"
  replicas: 2
  selector:
    matchLabels:
      app: xl-deploy
  template:
    metadata:
      labels:
        app: xl-deploy
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9100'
    spec:
      {{if (or (eq .K8sSetup "AWS EKS" ) (eq .K8sSetup "Plain multinode K8s cluster" ))}}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - xl-deploy
              topologyKey: "kubernetes.io/hostname"
      {{end}}
      initContainers:
        - name: fix-the-volume-permission
          image: busybox
          command:
            - sh
            - -c
            - chown -R 10001 /opt/xebialabs/xl-deploy-server/work
          securityContext:
            privileged: true
          volumeMounts:
            - name: work-dir
              mountPath: /opt/xebialabs/xl-deploy-server/work
        - name: wait-for-postgresql
          image: alpine:3.6
          command:
            - sh
            - -c
            - >
              until nc -z -w 2 $POSTGRES_SVC $POSTGRES_PORT && echo database ok; do
              sleep 2;
              done;
          env:
            - name: POSTGRES_SVC
              value: postgresql
            - name: POSTGRES_PORT
              value: "5432"
      containers:
        - name: xl-deploy
          image: {{$DOCKER_REPO}}/xl-deploy:{{$XL_VERSION}}
          imagePullPolicy: Always
          env:
            - name: ADMIN_PASSWORD
              value: {{$XLD_ADMIN_PASS}}
            - name: XL_CLUSTER_MODE
              value: hot-standby
            - name: XL_DB_URL
              value: jdbc:postgresql://postgresql:5432/{{$XLD_DB_NAME}}
            - name: XL_DB_USERNAME
              value: {{$XLD_DB_USER}}
            - name: XL_DB_PASSWORD
              value: "{{$XLD_DB_PASS}}"
            - name: XL_METRICS_ENABLED
              value: "false"
            - name: XL_LICENSE
              value: {{$XLD_LIC}}
            - name: REPOSITORY_KEYSTORE_PASSPHRASE
              value: {{$XLD_KEYSTORE_PASS}}
            - name: REPOSITORY_KEYSTORE
              value: {{$XLD_KEYSTORE}}
          resources:
            requests:
              memory: "1.6Gi"
              cpu: "0.7"
            limits:
              memory: "3Gi"
              cpu: "2"
          ports:
            - name: http
              containerPort: 4516
            - name: jmx-exporter
              containerPort: 9100
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 20
            periodSeconds: 15
            failureThreshold: 6
          volumeMounts:
            - name: work-dir
              mountPath: /opt/xebialabs/xl-deploy-server/work
      volumes:
        - name: work-dir
          persistentVolumeClaim:
            claimName: xld-claim
